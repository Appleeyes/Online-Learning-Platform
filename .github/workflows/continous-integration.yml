name: "Online Learning Platform"

on:
  push:
  pull_request:
    branches:
      - "development"
      - "main"

jobs:
  static-analysis-phpstan:
    name: "Static Analysis by PHPStan"

    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        dependencies:
          - "locked"
        php-version:
          - "8.1"
        operating-system:
          - "ubuntu-latest"
          - "windows-latest"

    steps:
      - name: "Checkout Repostories"
        uses: "actions/checkout@v3"

      - name: "Set up PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"
          ini-values: memory_limit=-1

      - name: "Install composer dependencies"
        uses: "ramsey/composer-install@2.2.0"
        with:
          dependency-versions: "${{ matrix.dependencies }}"

      - name: "PHPStan"
        run: "vendor/bin/phpstan analyse --memory-limit=-1 src/Controller/ProfileController.php"

  acceptance-tests:
    name: "Acceptance tests"

    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        dependencies:
          - "locked"
        php-version:
          - "8.1"
        operating-system:
          - "ubuntu-latest"
          - "windows-latest"

    steps:
      - name: "Checkout Repository"
        uses: "actions/checkout@v3"

      - name: "Set up PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "pcov"
          php-version: ${{ matrix.php-version }}
          ini-values: memory_limit=-1

      - name: Set Environment Variables
        run: |
           echo "DATABASE_URL=mysql://applw:apple@22@127.0.0.1:3306/online-learning-platform" >> $GITHUB_ENV

      - name: "Get composer cache directory"
        id: "composer-cache"
        run: "echo \"::set-output name=dir::$(composer config cache-files-dir)\""

      - name: "Cache composer dependencies"
        uses: "actions/cache@v1"
        with:
          path: "${{ steps.composer-cache.outputs.dir }}"
          key: "${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}"
          restore-keys: "${{ runner.os }}-composer-"

      - name: "Install Composer dependencies"
        run: "composer install"

      - name: Start Symfony Web Server
        run: composer serve --timeout=0 --no-interaction

      - name: "Run Codeception acceptance tests"
        run: "vendor/bin/codecept run acceptance"

      - name: Stop Symfony Web Server
        run: pkill -f "php -S localhost:"